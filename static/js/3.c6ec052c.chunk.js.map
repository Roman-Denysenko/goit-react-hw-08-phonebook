{"version":3,"sources":["redux/contacts/operations.js","redux/contacts/selectors.js","components/warning/Warning.js","components/contactForm/contactForm.js","components/contactList/contactList.js","components/filter/filter.js","views/contacts/contacts.js","views/contacts/Contacts.module.css","components/warning/Warning.module.css","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/filter/Filter.module.css"],"names":["axios","defaults","baseURL","fetchContacts","dispatch","fetchContactsRequest","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","getContacts","state","contacts","getContactsItems","items","getFilterValue","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","el","name","includes","getLoading","loading","Warning","className","s","warningContainer","ContactForm","number","warning","handleInputName","e","target","value","setState","handleDeleteContactFromFormState","handleSubmitForm","preventDefault","props","contactItem","id","uuidv4","find","item","onAdd","resetInput","newContactsFromAppState","this","formContainer","CSSTransition","in","timeout","classNames","unmountOnExit","onSubmit","form","label","input","type","onChange","button","Component","defaultProps","connect","selectors","addContactRequest","post","addContactSuccess","addContactError","addContact","visibleContacts","onDelete","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","length","TransitionGroup","component","map","onClick","onFilter","container","appear","module","exports"],"mappings":"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","file":"static/js/3.c6ec052c.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    addContactRequest, addContactSuccess,\r\n    addContactError, deleteContactRequest,\r\n    deleteContactSuccess, deleteContactError,\r\n    fetchContactsRequest, fetchContactsSuccess,\r\n    fetchContactsError\r\n} from './actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n        .catch(error=>dispatch(fetchContactsError(error)))\r\n    \r\n}\r\n\r\nexport const addContact = (item) => dispatch => {\r\n \r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', item)\r\n        .then(({data})=> dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)) )\r\n}\r\n\r\nexport const deleteContact = (id) => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(()=> dispatch(deleteContactSuccess(id)))\r\n        .catch(error=>dispatch(deleteContactError(error)))\r\n}\r\n\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts;\r\n\r\nconst getContactsItems = state => {\r\n    const contacts = getContacts(state);\r\n    return contacts.items;\r\n};\r\n\r\nconst getLoading = state => {\r\n    const contacts = getContacts(state);\r\n    return contacts.loading;\r\n}\r\n\r\nconst getFilterValue = state => {\r\n    const contacts = getContacts(state);\r\n    return contacts.filter;\r\n}\r\n\r\nconst getVisibleContacts =  createSelector(\r\n    [getContactsItems, getFilterValue],\r\n    (items,filter)=>{\r\n    const normalizedFilter = filter.toLowerCase();  \r\n   return( items.filter(el =>\r\n      el.name.toLowerCase().includes(normalizedFilter),\r\n  ))}\r\n)\r\n\r\nexport default {\r\n    getContacts,\r\n    getContactsItems,\r\n    getLoading,\r\n    getFilterValue,\r\n    getVisibleContacts,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nimport s from './Warning.module.css';\r\n\r\n\r\nconst Warning = ({ name }) => {\r\n    return (\r\n        <div className={s.warningContainer}>\r\n            <p>{ `${name} is already is contact`}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nWarning.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default Warning;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CSSTransition } from 'react-transition-group';\nimport Warning from '../warning';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport selectors from '../../redux/contacts/selectors';\n\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    contacts: PropTypes.object,\n    onAdd: PropTypes.func,\n  };\n\n  static defaultProps = {};\n\n  state = {\n    name: '',\n    number: '',\n    warning:false,\n  };\n\n  handleInputName = e => {\n\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n      warning:false});\n    this.handleDeleteContactFromFormState();\n  };\n\n  handleSubmitForm = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const  contacts = this.props.contacts.items;\n    const contactItem = { id: uuidv4(), name, number};\n\n    if (name === '' || number === '') {\n      return;\n    }\n\n    if (contacts.find(item => name === item.name)) {\n      this.setState({warning: true})\n      return;\n    } else {\n      this.setState({\n        warning:false,\n      });\n    }\n    this.props.onAdd(contactItem)\n    this.resetInput();\n  };\n\n  handleDeleteContactFromFormState = () => {\n    const newContactsFromAppState = this.props.contacts.items;\n    this.setState({ contacts: newContactsFromAppState });\n  };\n\n  resetInput = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n  \n    const { name, number,warning } = this.state;\n    return (\n      <div className={s.formContainer}>\n        <CSSTransition in={warning} timeout={250} classNames={s} unmountOnExit>\n           <Warning name={name} />\n        </CSSTransition>  \n      <form onSubmit={this.handleSubmitForm} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInputName}\n          ></input>\n        </label>\n\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleInputName}\n          ></input>\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n        </form>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n   onAdd: item => dispatch(addContact(item)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)  ;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/operations';\r\nimport selectors from '../../redux/contacts/selectors';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\n\r\nconst ContactList = ({ items,visibleContacts, onDelete }) => {\r\n  \r\n  if (items.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const ContactItem = ({ id, name, number }) => {\r\n    if (name === '' || number === '') {\r\n      return null;\r\n    }\r\n    return (\r\n      <CSSTransition key={id} timeout={250} classNames={s}>\r\n        <li  className={s.item}>\r\n        {name}: {number}\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          id={id}\r\n          onClick={()=>onDelete(id)}\r\n        >\r\n            Delete\r\n        </button>{' '}\r\n          </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n\r\n  return ( \r\n    <TransitionGroup component='ul'>\r\n      {visibleContacts.map(ContactItem)}\r\n    </TransitionGroup>\r\n  )\r\n};\r\n\r\nContactList.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n  contacts:PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  items: selectors.getContactsItems(state),\r\n  visibleContacts:selectors.getVisibleContacts(state),\r\n});\r\n\r\n const mapDispatchToProps = dispatch => ({\r\n   onDelete: (id) => dispatch(deleteContact(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList) ;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { filter } from '../../redux/contacts/actions';\r\nimport selectors from '../../redux/contacts/selectors';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter =({value,onFilter })=> {\r\n   \r\n    return (\r\n      <>\r\n        <label className={s.label}>\r\n          Find contact by name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={value}\r\n            onChange={onFilter}\r\n          ></input>\r\n        </label>\r\n      </>\r\n    );\r\n}\r\n  \r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  value: selectors.getFilterValue(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onFilter: e=> dispatch(filter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter) ;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport s from './Contacts.module.css';\r\nimport { fetchContacts } from '../../redux/contacts/operations';\r\nimport selectors from '../../redux/contacts/selectors';\r\n\r\nimport ContactForm from '../../components/contactForm';\r\nimport ContactList from '../../components/contactList';\r\nimport Filter from '../../components/filter';\r\n\r\nconst Contacts = ({ items, loading }) => {\r\n  fetchContacts();\r\n    \r\n    return (\r\n      <div className={s.container}>\r\n        <CSSTransition in={true} appear={true}classNames={s} timeout={500} unmountOnExit>\r\n          <h1>Phonebook</h1>\r\n        </CSSTransition>\r\n\r\n        <ContactForm />\r\n        {loading&&<p>Loading...</p>} \r\n\r\n       <CSSTransition in={items.length>0} timeout={250} classNames={s} unmountOnExit>\r\n          <div>\r\n            <h2>Contacts</h2>\r\n            <Filter />\r\n        <ContactList\r\n            />\r\n            </div>\r\n          </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n\r\nContacts.propTypes = {\r\n  items: PropTypes.array,\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  items: selectors.getContactsItems(state),\r\n  loading:selectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts:dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Contacts);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__3YNDo\",\"enter\":\"Contacts_enter__KzKm1\",\"enterActive\":\"Contacts_enterActive__1jvsv\",\"exit\":\"Contacts_exit__21_ib\",\"exitActive\":\"Contacts_exitActive__3k3Pn\",\"appear\":\"Contacts_appear__3n6Dd\",\"appearActive\":\"Contacts_appearActive__1dftY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warningContainer\":\"Warning_warningContainer__2EN7S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__v83pb\",\"input\":\"ContactForm_input__3fIcq\",\"label\":\"ContactForm_label__S2Xyt\",\"button\":\"ContactForm_button__1fY90\",\"formContainer\":\"ContactForm_formContainer__2hQjx\",\"enter\":\"ContactForm_enter__3wzki\",\"enterActive\":\"ContactForm_enterActive__LnTU2\",\"exit\":\"ContactForm_exit__3vr4s\",\"exitActive\":\"ContactForm_exitActive__1ZKT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__iH2GR\",\"item\":\"ContactList_item__3lxuK\",\"enter\":\"ContactList_enter__2f9hS\",\"enterActive\":\"ContactList_enterActive__mVECa\",\"exit\":\"ContactList_exit__2p3Cj\",\"exitActive\":\"ContactList_exitActive__2CB6Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2pdNv\",\"input\":\"Filter_input__tiuNn\"};"],"sourceRoot":""}